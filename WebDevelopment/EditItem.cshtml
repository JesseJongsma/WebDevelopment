@using WebMatrix.Data;
@RenderPage("~/Components/LoggedIn.cshtml");
@{
    // Input boxes
    string nameInput = null, descriptionInput = null, linkInput = null;

    // Declare Get variables
    int wishlistId = 0, eventId = 0;
    string name = null, description = null, link = null;

    // Assign variables
    try
    {
        wishlistId = Convert.ToInt32(Request.Params["wishlistId"]);
        eventId = Convert.ToInt32(Request.Params["EventId"]);
        name = Request.Params["NameRow"];
        description = Request.Params["DescriptionRow"];
        link = Request.Params["LinkRow"];
    }
    catch (Exception e)
    {
        Validation.Add(e.ToString());
    }

    // Declare class variables
    Auth auth = new Auth();
    Wishlists wishlists = new Wishlists();
    Events events = new Events(eventId, Session["Username"].ToString());

    Validation.RequireField("name", "Name is a required field.");

    if (IsPost && Validation.IsValid() && Request.Form["update"] != null)
    {
        nameInput = Request.Form["name"];
        descriptionInput = Request.Form["description"];
        linkInput = Request.Form["link"];

        int userId = auth.GetUserId(Session["Username"].ToString());

        if (events.GetHost())
        {
            wishlists.Updatewishlist(name, description, link, wishlistId);
            Response.Redirect("~/createWishlist.cshtml?EventId=" + eventId);
        }
    }

    if (IsPost && Validation.IsValid() && Request.Form["remove"] != null)
    {

        if (events.GetHost())
        {
            wishlists.RemoveWishlist(wishlistId);
            Response.Redirect("~/createWishlist.cshtml?EventId=" + eventId);
        }
    }
}
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    @RenderPage("~/Components/head.cshtml")
</head>
<body>
    @RenderPage("~/Components/navbar.cshtml")
    <div class="container d-flex h-100 justify-content-center">
        <div class="row h-100 justify-content-center align-items-center">
            <form class="col-md-12" action="" method="post">
                @if (IsPost && !Validation.IsValid())
                {
                    <div class="alert alert-danger">
                        @Html.ValidationSummary("Errors:", false)
                    </div>
                }
                <h1>Edit item.</h1>

                <div class="form-group">
                    <input class="form-control" type="text" name="name" placeholder="Modify the name of the item." value="@name" required />
                </div>
                <div class="form-group">
                    <textarea class="form-control" name="description" placeholder="Modify the description of your item. (Optional)">@description</textarea>
                </div>
                <div class="form-group">
                    <input class="form-control col" type="text" name="link" placeholder="Modify the link to your item. (Optional)" value="@link" />
                </div>
                <input class="btn btn-primary btn-block" type="submit" name="update" value="Update Row">
                <input class="btn btn-danger btn-block" id="remove" name="remove" value="Remove Row">
            </form>
        </div>
    </div>
    <script type="text/javascript">
        $("#remove").click(function () {
            $("#remove").val("Are you sure?");

            $("#remove").click(function () {
                $("#remove").attr("type", "submit");
            });
        });
    </script>
</body>
</html>